version: 2.1

jobs:
  lint_terraform:
    docker:
      - image: "circleci/node:10"
    steps:
      - "checkout"
      - run: "sudo ~/project/.circleci/install_terraform.sh"
      - run: "terraform fmt -check=true fastly/terraform/"
  lint_js:
    docker:
      - image: "circleci/node:10"
    steps:
      - "checkout"
      - run: "yarn install --frozen-lockfile"
      - run: "npm run lint"
  unit_tests:
    docker:
      - image: "circleci/node:10"
    steps:
      - "checkout"
      - run: "yarn install --frozen-lockfile"
      - run: "npm run test-unit"
  deploy_dev:
    docker:
      - image: "circleci/node:10"
    steps:
      - "checkout"
      - run: "yarn install --frozen-lockfile"
      - run: "bash ~/project/.circleci/create_netrc_file.sh"
      - run: "git push https://git.heroku.com/origami-polyfill-service-int.git HEAD:master --force"
      - run: "sudo ~/project/.circleci/install_terraform.sh"
      - run: |
          rm -f terraform.tfstate
          rm fastly/terraform/qa_override.tf
          rm fastly/terraform/production_override.tf
          terraform init fastly/terraform/
          terraform import -config="fastly/terraform" fastly_service_v1.app $FASTLY_SERVICE_ID_DEV
          rm -f fastly/terraform/domains_override.tf
          terraform apply --auto-approve -var name=origami-polyfill-service-dev.in.ft.com -var domain=origami-polyfill-service-dev.in.ft.com fastly/terraform/
          sleep 60
  integration_tests_dev:
    docker:
      - image: "circleci/node:10"
    steps:
      - "checkout"
      - run: |
          yarn install --frozen-lockfile
          HOST=https://origami-polyfill-service-dev.in.ft.com npm run test-integration
  deploy_staging:
    docker:
      - image: "circleci/node:10"
    steps:
      - "checkout"
      - run: "yarn install --frozen-lockfile"
      - run: "bash ~/project/.circleci/create_netrc_file.sh"
      - run: "git push https://git.heroku.com/origami-polyfill-service-qa-eu.git HEAD:master --force"
      - run: "git push https://git.heroku.com/origami-polyfill-service-qa-us.git HEAD:master --force"
      - run: "sudo ~/project/.circleci/install_terraform.sh"
      - run: |
          rm -f terraform.tfstate
          rm fastly/terraform/dev_override.tf
          rm fastly/terraform/production_override.tf
          terraform init fastly/terraform/
          terraform import -config="fastly/terraform" fastly_service_v1.app $FASTLY_SERVICE_ID_STAGING
          rm -f fastly/terraform/domains_override.tf
          terraform apply --auto-approve -var name=qa.polyfill.io -var domain=qa.polyfill.io fastly/terraform/
          sleep 60
  integration_tests_staging:
    docker:
      - image: "circleci/node:10"
    steps:
      - "checkout"
      - run: |
          yarn install --frozen-lockfile
          HOST=https://qa.polyfill.io npm run test-integration
  deploy_service_production:
    docker:
      - image: "circleci/node:10"
    steps:
      - "checkout"
      - run: "yarn install --frozen-lockfile"
      - run: "sudo ~/project/.circleci/install_heroku.sh"
      - run: "bash ~/project/.circleci/create_netrc_file.sh"
      - run: "sudo ~/project/.circleci/install_terraform.sh"
      - run: "heroku pipelines:promote --app origami-polyfill-service-qa-eu --to origami-polyfill-service-eu,origami-polyfill-service-us"
      - run: |
          cd ~/project/
          rm -f terraform.tfstate
          rm fastly/terraform/dev_override.tf
          rm fastly/terraform/qa_override.tf
          terraform init fastly/terraform/
          terraform import -config="fastly/terraform" fastly_service_v1.app $FASTLY_SERVICE_ID_PROD
          rm -f fastly/terraform/domains_override.tf
          terraform apply --auto-approve -var name=cdn.polyfill.io -var domain=cdn.polyfill.io fastly/terraform/

workflows:
  test:
    jobs:
      - lint_terraform:
          filters:
            tags:
              ignore: /^v.*/
            branches:
              ignore: master
      - lint_js:
          filters:
            tags:
              ignore: /^v.*/
            branches:
              ignore: master
      - unit_tests:
          filters:
            tags:
              ignore: /^v.*/
            branches:
              ignore: master
      - deploy_dev:
          filters:
            tags:
              ignore: /^v.*/
            branches:
              ignore: master
          requires:
            - lint_terraform
            - lint_js
            - unit_tests
      - integration_tests_dev:
          filters:
            tags:
              ignore: /^v.*/
            branches:
              ignore: master
          requires:
            - deploy_dev
      - deploy_staging:
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only:
               - master
      - integration_tests_staging:
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only:
                - master
          requires:
            - deploy_staging
      - deploy_service_production:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
